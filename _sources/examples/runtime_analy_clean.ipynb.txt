{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Runtime Analysis shapiq vs shap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== 3.1 Laufzeitanalyse shapiq vs shap ===\n",
      "Empirische Performance-Analyse für Shapley-Wert Approximation\n",
      "Gruppe D - Softwareentwicklungspraktikum SoSe 2025\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "3.1 Laufzeitanalyse shapiq vs shap\n",
    "\n",
    "Dieses Notebook führt eine empirische Laufzeitanalyse durch, in der die Performance\n",
    "des TabularExplainer aus shapiq mit der Standardbibliothek shap verglichen wird.\n",
    "\n",
    "Autoren: Gruppe D - SEP ALML\n",
    "Datum: Juli 2025\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "print(\"=== 3.1 Laufzeitanalyse shapiq vs shap ===\")\n",
    "print(\"Empirische Performance-Analyse für Shapley-Wert Approximation\")\n",
    "print(\"Gruppe D - Softwareentwicklungspraktikum SoSe 2025\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: shapiq in /usr/local/lib/python3.11/dist-packages (1.3.1)\n",
      "Requirement already satisfied: shap in /usr/local/lib/python3.11/dist-packages (0.48.0)\n",
      "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.11/dist-packages (1.6.1)\n",
      "Requirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (3.10.0)\n",
      "Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (0.13.2)\n",
      "Requirement already satisfied: pandas in /usr/local/lib/python3.11/dist-packages (2.2.2)\n",
      "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (2.0.2)\n",
      "Requirement already satisfied: overrides in /usr/local/lib/python3.11/dist-packages (7.7.0)\n",
      "Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from shapiq) (1.15.3)\n",
      "Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from shapiq) (4.67.1)\n",
      "Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from shapiq) (2.32.3)\n",
      "Requirement already satisfied: sparse-transform in /usr/local/lib/python3.11/dist-packages (from shapiq) (0.2.1)\n",
      "Requirement already satisfied: galois in /usr/local/lib/python3.11/dist-packages (from shapiq) (0.4.6)\n",
      "Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from shapiq) (3.5)\n",
      "Requirement already satisfied: colour in /usr/local/lib/python3.11/dist-packages (from shapiq) (0.1.5)\n",
      "Requirement already satisfied: pillow in /usr/local/lib/python3.11/dist-packages (from shapiq) (11.2.1)\n",
      "Requirement already satisfied: packaging>20.9 in /usr/local/lib/python3.11/dist-packages (from shap) (25.0)\n",
      "Requirement already satisfied: slicer==0.0.8 in /usr/local/lib/python3.11/dist-packages (from shap) (0.0.8)\n",
      "Requirement already satisfied: numba>=0.54 in /usr/local/lib/python3.11/dist-packages (from shap) (0.60.0)\n",
      "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.11/dist-packages (from shap) (3.1.1)\n",
      "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.11/dist-packages (from shap) (4.14.1)\n",
      "Requirement already satisfied: joblib>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (1.5.1)\n",
      "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn) (3.6.0)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.3.2)\n",
      "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (0.12.1)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (4.58.5)\n",
      "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (1.4.8)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (3.2.3)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n",
      "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas) (2025.2)\n",
      "Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.11/dist-packages (from numba>=0.54->shap) (0.43.0)\n",
      "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->shapiq) (3.4.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->shapiq) (3.10)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->shapiq) (2.4.0)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->shapiq) (2025.7.14)\n",
      "shapiq version: 1.3.1\n",
      "shap version: 0.48.0\n",
      "所有库导入成功！\n"
     ]
    }
   ],
   "source": [
    "# install dependencis\n",
    "!pip install shapiq shap scikit-learn matplotlib seaborn pandas numpy overrides\n",
    "\n",
    "# imports\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import time\n",
    "from sklearn.ensemble import RandomForestRegressor, RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error, accuracy_score\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "# Shapiq imports\n",
    "import shapiq\n",
    "from shapiq import (\n",
    "    TabularExplainer,\n",
    "    KernelSHAP,\n",
    "    SVARM,\n",
    "    PermutationSamplingSV,\n",
    "    MarginalImputer,\n",
    "    InteractionValues\n",
    ")\n",
    "\n",
    "# Shap imports\n",
    "import shap\n",
    "\n",
    "# seed to results stable\n",
    "np.random.seed(42)\n",
    "\n",
    "\n",
    "print(f\"shapiq version: {shapiq.__version__}\")\n",
    "print(f\"shap version: {shap.__version__}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1. load dataset...\n",
      "   Bike Sharing Dataset: 17379 samples, 12 features\n",
      "   加载 California Housing 数据集...\n",
      "   California data type: <class 'tuple'>\n",
      "   California Housing Dataset: 20640 samples, 8 features\n",
      "\n",
      "=== 数据集概览 ===\n",
      "Bike Sharing: (17379, 12)\n",
      "  Features: ['season', 'year', 'month', 'hour', 'holiday', 'weekday', 'workingday', 'weather', 'temp', 'feel_temp', 'humidity', 'windspeed']\n",
      "  Target range: 1.00 - 977.00\n",
      "\n",
      "California Housing: (20640, 8)\n",
      "  Features: ['MedInc', 'HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'AveOccup', 'Latitude', 'Longitude']\n",
      "  Target range: 0.15 - 5.00\n",
      "\n",
      "数据集加载和预处理完成！\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(\"1. load dataset...\")\n",
    "\n",
    "bike_data = pd.read_csv('/content/bike_sharing.csv')\n",
    "\n",
    "# season and weather r str\n",
    "bike_data['season'] = bike_data['season'].astype('category').cat.codes\n",
    "bike_data['weather'] = bike_data['weather'].astype('category').cat.codes\n",
    "\n",
    "X_bike = bike_data.drop(columns=['count'])\n",
    "y_bike = bike_data['count']\n",
    "\n",
    "print(f\"   Bike Sharing Dataset: {X_bike.shape[0]} samples, {X_bike.shape[1]} features\")\n",
    "\n",
    "# load california housing\n",
    "print(\"   load California Housing ...\")\n",
    "\n",
    "california_data = shapiq.load_california_housing()\n",
    "print(f\"   California data type: {type(california_data)}\")\n",
    "if isinstance(california_data, tuple):\n",
    "      X_california, y_california = california_data\n",
    "else:\n",
    "      X_california = california_data.iloc[:, :-1]\n",
    "      y_california = california_data.iloc[:, -1]\n",
    "\n",
    "print(f\"   California Housing Dataset: {X_california.shape[0]} samples, {X_california.shape[1]} features\")\n",
    "\n",
    "print(f\"Bike Sharing: {X_bike.shape}\")\n",
    "print(f\"  Features: {list(X_bike.columns)}\")\n",
    "print(f\"  Target range: {y_bike.min():.2f} - {y_bike.max():.2f}\")\n",
    "\n",
    "print(f\"\\nCalifornia Housing: {X_california.shape}\")\n",
    "print(f\"  Features: {list(X_california.columns)}\")\n",
    "print(f\"  Target range: {y_california.min():.2f} - {y_california.max():.2f}\")\n",
    "\n",
    "print(\"\\ndataset complete！\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   split Bike Sharing ...\n",
      "   split California Housing...\n",
      "    Bike Sharing ...\n",
      "    California Housing ...\n",
      "\n",
      "=== R ===\n",
      "Bike Sharing R²: 0.9208\n",
      "California Housing R²: 0.7732\n",
      "\n",
      "   for explain shoose 3 samples...\n",
      "Bike Sharing shape: (3, 12)\n",
      "California Housing shape: (3, 8)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(\"   split Bike Sharing ...\")\n",
    "X_bike_train, X_bike_test, y_bike_train, y_bike_test = train_test_split(\n",
    "    X_bike, y_bike, test_size=0.2, random_state=42\n",
    ")\n",
    "\n",
    "print(\"   split California Housing...\")\n",
    "X_calif_train, X_calif_test, y_calif_train, y_calif_test = train_test_split(\n",
    "    X_california, y_california, test_size=0.2, random_state=42\n",
    ")\n",
    "\n",
    "# train model\n",
    "print(\"    Bike Sharing ...\")\n",
    "bike_model = RandomForestRegressor(n_estimators=50, random_state=42, max_depth=10)\n",
    "bike_model.fit(X_bike_train, y_bike_train)\n",
    "bike_score = bike_model.score(X_bike_test, y_bike_test)\n",
    "\n",
    "print(\"    California Housing ...\")\n",
    "calif_model = RandomForestRegressor(n_estimators=50, random_state=42, max_depth=10)\n",
    "calif_model.fit(X_calif_train, y_calif_train)\n",
    "calif_score = calif_model.score(X_calif_test, y_calif_test)\n",
    "\n",
    "print(f\"\\n=== R ===\")\n",
    "print(f\"Bike Sharing R²: {bike_score:.4f}\")\n",
    "print(f\"California Housing R²: {calif_score:.4f}\")\n",
    "\n",
    "sample_size = 3  # choose 3 sample to explain\n",
    "print(f\"\\n   for explain shoose {sample_size} samples...\")\n",
    "\n",
    "bike_explain_indices = np.random.choice(X_bike_test.shape[0], sample_size, replace=False)\n",
    "calif_explain_indices = np.random.choice(X_calif_test.shape[0], sample_size, replace=False)\n",
    "\n",
    "X_bike_explain = X_bike_test.iloc[bike_explain_indices]\n",
    "X_calif_explain = X_calif_test.iloc[calif_explain_indices]\n",
    "\n",
    "print(f\"Bike Sharing shape: {X_bike_explain.shape}\")\n",
    "print(f\"California Housing shape: {X_calif_explain.shape}\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "测试的模型评估次数: [50, 100, 200, 500, 1000]\n",
      "background size: 50\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# times\n",
    "n_evaluations_list = [50, 100, 200, 500, 1000]\n",
    "print(f\"测试的模型评估次数: {n_evaluations_list}\")\n",
    "\n",
    "background_size = 50\n",
    "print(f\"background size: {background_size}\")\n",
    "\n",
    "def compute_reference_shapley(model, X_background, x_explain, max_evals=2000):\n",
    "    \"\"\"compute Shapley value\"\"\"\n",
    "    try:\n",
    "        explainer = TabularExplainer(\n",
    "            model=model.predict,\n",
    "            data=X_background,\n",
    "            approximator=KernelSHAP(n=max_evals),\n",
    "            random_state=42\n",
    "        )\n",
    "        result = explainer.explain(x_explain, budget=max_evals)\n",
    "        return result.values\n",
    "    except Exception as e:\n",
    "        print(f\": {e}\")\n",
    "        return None\n",
    "\n",
    "def measure_performance(method_name, explain_func, reference_values=None):\n",
    "    \"\"\"measur run time and performence\"\"\"\n",
    "    start_time = time.time()\n",
    "    try:\n",
    "        shapley_values = explain_func()\n",
    "        runtime = time.time() - start_time\n",
    "\n",
    "        # compite performance\n",
    "        quality = None\n",
    "        if reference_values is not None and shapley_values is not None:\n",
    "            # L2\n",
    "            quality = np.linalg.norm(shapley_values - reference_values)\n",
    "\n",
    "        return {\n",
    "            'method': method_name,\n",
    "            'runtime': runtime,\n",
    "            'quality': quality,\n",
    "            'values': shapley_values,\n",
    "            'success': True\n",
    "        }\n",
    "    except Exception as e:\n",
    "      return None\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== BIKE DATASET ===\n",
      "backgroud size: (50, 12), features: 12\n",
      "\n",
      "--- samples 1/3 ---\n",
      "  test budget = 12\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b038d65a9e2342c8a25cfa82e08ee603",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 24\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b15589fa1f4248bc82c273478f0a7d9c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 50\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2fb320c82d604f648988bbf1d36d8ad4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 100\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ba1fb86e1afa4c9abeaf1e5c87ddb915",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- samples 2/3 ---\n",
      "  test budget = 12\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "da331007ded64bf3b1f444b16fc9cdb6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 24\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4b4f3d736a694d23b7dace9a182645bb",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 50\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0fb66282a0e0423d93211e5d14f8d898",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 100\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d02cc613f63b41c2ab9d192fdae6e2a5",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- samples 3/3 ---\n",
      "  test budget = 12\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1bd515b632604187a68d2f7c0ac8abe0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 24\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "94cc6c99010e4eacb3efd084240b55f8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 50\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5fb6110c9c7144f5a1222fcc48b12776",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 100\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "978d2c10c7554e259d56bb89761916e2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== CALIFORNIA DATASET ===\n",
      "backgroud size: (50, 8), features: 8\n",
      "\n",
      "--- samples 1/3 ---\n",
      "  test budget = 8\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a0943d9bfa92482c94c64e53089893be",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 16\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7428c6c930a542f5860fc600f1dbae45",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 32\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "73ab5ca181284117bfa0439109d4a75f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 64\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "60164c7d15db440591717a83ac289796",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- samples 2/3 ---\n",
      "  test budget = 8\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b3fc1c5f2a2b43568e20fd03bf3ea9c0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 16\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e16a26f7c3c1463aa5f5d307cd68111f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 32\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0e83339a4cef4bf08a4ade28fe4af0b4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 64\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "64c158f259ae4ed39f1de049fd38e30b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- samples 3/3 ---\n",
      "  test budget = 8\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2f78361793e441eb9a05589452abc7a3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 16\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9345742b0e26474780dfbc639f042fd6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 32\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c110eb1d3f3847de8ad8cd283a10a142",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  test budget = 64\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0d7d7adcfc714d2296dbf445e820d9e2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "overall 144 tests\n",
      "success tests: 144/144 (100.0%)\n",
      "success methods: shap_KernelExplainer, shap_PermutationExplainer, shapiq_KernelSHAP, shapiq_PermutationSV, shapiq_SVARM, shapiq_TabularExplainer\n",
      "\n",
      "=== perfomance preview ===\n",
      "shap_KernelExplainer: avg 0.092s (24 times tests)\n",
      "shap_PermutationExplainer: avg 0.037s (24 times tests)\n",
      "shapiq_KernelSHAP: avg 0.227s (24 times tests)\n",
      "shapiq_PermutationSV: avg 0.626s (24 times tests)\n",
      "shapiq_SVARM: avg 0.238s (24 times tests)\n",
      "shapiq_TabularExplainer: avg 0.231s (24 times tests)\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "results = []\n",
    "\n",
    "# - KernelSHAP/SVARM/PermutationSamplingSV的 n 参数 = features\n",
    "# - budget control accuracy\n",
    "\n",
    "budget_mapping = {\n",
    "    'bike': [12, 24, 50, 100],\n",
    "    'california': [8, 16, 32, 64]\n",
    "}\n",
    "\n",
    "# define datasets\n",
    "datasets = [\n",
    "    (\"bike\", bike_model, X_bike_train, X_bike_explain, budget_mapping['bike']),\n",
    "    (\"california\", calif_model, X_calif_train, X_calif_explain, budget_mapping['california'])\n",
    "]\n",
    "\n",
    "for dataset_name, model, X_train, X_explain, budget_list in datasets:\n",
    "    print(f\"\\n=== {dataset_name.upper()} DATASET ===\")\n",
    "\n",
    "    X_background_df = X_train.sample(n=background_size, random_state=42)\n",
    "    X_background = X_background_df.values\n",
    "    n_features = X_background.shape[1]\n",
    "    print(f\"backgroud size: {X_background.shape}, features: {n_features}\")\n",
    "\n",
    "    for idx, x_explain in enumerate(X_explain.values):\n",
    "        print(f\"\\n--- samples {idx + 1}/{len(X_explain)} ---\")\n",
    "\n",
    "        for budget in budget_list:\n",
    "            print(f\"  test budget = {budget}\")\n",
    "\n",
    "            # define methos\n",
    "            all_methods = {}\n",
    "\n",
    "            # shap\n",
    "            all_methods['shap_KernelExplainer'] = lambda b=budget: shap.KernelExplainer(\n",
    "                model.predict,\n",
    "                X_background\n",
    "            ).shap_values(x_explain.reshape(1, -1), nsamples=b*10)[0]\n",
    "\n",
    "            all_methods['shap_PermutationExplainer'] = lambda b=budget: shap.PermutationExplainer(\n",
    "                model.predict,\n",
    "                X_background\n",
    "            ).shap_values(x_explain.reshape(1, -1))[0]\n",
    "\n",
    "            # shapiq\n",
    "            all_methods['shapiq_TabularExplainer'] = lambda b=budget: TabularExplainer(\n",
    "                model=model.predict,\n",
    "                data=X_background,\n",
    "                random_state=42\n",
    "            ).explain(x_explain, budget=b).values\n",
    "\n",
    "            all_methods['shapiq_KernelSHAP'] = lambda b=budget: TabularExplainer(\n",
    "                model=model.predict,\n",
    "                data=X_background,\n",
    "                approximator=KernelSHAP(n=n_features),\n",
    "                random_state=42\n",
    "            ).explain(x_explain, budget=b).values\n",
    "\n",
    "            all_methods['shapiq_SVARM'] = lambda b=budget: TabularExplainer(\n",
    "                model=model.predict,\n",
    "                data=X_background,\n",
    "                approximator=SVARM(n=n_features),\n",
    "                random_state=42\n",
    "            ).explain(x_explain, budget=b).values\n",
    "\n",
    "            all_methods['shapiq_PermutationSV'] = lambda b=budget: TabularExplainer(\n",
    "                model=model.predict,\n",
    "                data=X_background,\n",
    "                approximator=PermutationSamplingSV(n=n_features),\n",
    "                random_state=42\n",
    "            ).explain(x_explain, budget=b).values\n",
    "\n",
    "\n",
    "            for method_name, method_func in all_methods.items():\n",
    "                result = measure_performance(method_name, method_func, None)\n",
    "                result.update({\n",
    "                    'dataset': dataset_name,\n",
    "                    'sample_idx': idx,\n",
    "                    'n_evaluations': budget,\n",
    "                    'n_features': len(x_explain)\n",
    "                })\n",
    "                results.append(result)\n",
    "\n",
    "\n",
    "print(f\"\\noverall {len(results)} tests\")\n",
    "\n",
    "successful_results = [r for r in results if r['success']]\n",
    "print(f\"success tests: {len(successful_results)}/{len(results)} ({len(successful_results)/len(results)*100:.1f}%)\")\n",
    "\n",
    "if len(successful_results) > 0:\n",
    "    methods = set(r['method'] for r in successful_results)\n",
    "    print(f\"success methods: {', '.join(sorted(methods))}\")\n",
    "\n",
    "    print(f\"\\n=== perfomance preview ===\")\n",
    "    for method in sorted(methods):\n",
    "        method_data = [r for r in successful_results if r['method'] == method]\n",
    "        avg_runtime = sum(r['runtime'] for r in method_data) / len(method_data)\n",
    "        print(f\"{method}: avg {avg_runtime:.3f}s ({len(method_data)} times tests)\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "=== conclusion ===\n",
      "overall number of tests: 144\n",
      "successful tests: 144 (100%)\n",
      "methods: 6 个\n",
      "datasets: bike, california\n",
      "\n",
      "=== performance ranking ===\n",
      "1. shap_PermutationExplainer: 0.035±0.005s (范围: 0.028-0.049s)\n",
      "2. shap_KernelExplainer: 0.080±0.029s (范围: 0.048-0.146s)\n",
      "3. shapiq_KernelSHAP: 0.214±0.030s (范围: 0.180-0.304s)\n",
      "4. shapiq_TabularExplainer: 0.221±0.037s (范围: 0.185-0.352s)\n",
      "5. shapiq_SVARM: 0.222±0.037s (范围: 0.185-0.365s)\n",
      "6. shapiq_PermutationSV: 0.623±0.151s (范围: 0.386-0.857s)\n",
      "\n",
      "=== comparision via library ===\n",
      "shap: avg 0.057±0.030s (48.0 tests)\n",
      "shapiq: avg 0.320±0.193s (96.0 tests)\n",
      "\n",
      "=== comparision via dataset ===\n",
      "\n",
      "BIKE Dataset:\n",
      "  shap_PermutationExplainer: 0.036s\n",
      "  shap_KernelExplainer: 0.095s\n",
      "  shapiq_TabularExplainer: 0.216s\n",
      "  shapiq_KernelSHAP: 0.219s\n",
      "  shapiq_SVARM: 0.228s\n",
      "  shapiq_PermutationSV: 0.613s\n",
      "\n",
      "CALIFORNIA Dataset:\n",
      "  shap_PermutationExplainer: 0.034s\n",
      "  shap_KernelExplainer: 0.065s\n",
      "  shapiq_KernelSHAP: 0.210s\n",
      "  shapiq_SVARM: 0.216s\n",
      "  shapiq_TabularExplainer: 0.226s\n",
      "  shapiq_PermutationSV: 0.633s\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "# tranfer results into DataFrame\n",
    "df_results = pd.DataFrame(results)\n",
    "df_success = df_results[df_results['success']].copy()\n",
    "\n",
    "df_success['library'] = df_success['method'].apply(lambda x: x.split('_')[0])\n",
    "df_success['algorithm'] = df_success['method'].apply(lambda x: '_'.join(x.split('_')[1:]))\n",
    "df_success['budget'] = df_success['n_evaluations']\n",
    "\n",
    "print(f\"=== conclusion ===\")\n",
    "print(f\"overall number of tests: {len(df_results)}\")\n",
    "print(f\"successful tests: {len(df_success)} (100%)\")\n",
    "print(f\"methods: {len(df_success['method'].unique())} 个\")\n",
    "print(f\"datasets: {', '.join(df_success['dataset'].unique())}\")\n",
    "\n",
    "print(f\"\\n=== performance ranking ===\")\n",
    "method_performance = df_success.groupby('method')['runtime'].agg(['mean', 'std', 'min', 'max', 'count']).round(4)\n",
    "method_performance_sorted = method_performance.sort_values('mean')\n",
    "\n",
    "for i, (method, stats) in enumerate(method_performance_sorted.iterrows(), 1):\n",
    "    print(f\"{i}. {method}: {stats['mean']:.3f}±{stats['std']:.3f}s (范围: {stats['min']:.3f}-{stats['max']:.3f}s)\")\n",
    "\n",
    "print(f\"\\n=== comparision via library ===\")\n",
    "library_performance = df_success.groupby('library')['runtime'].agg(['mean', 'std', 'count']).round(4)\n",
    "for library, stats in library_performance.iterrows():\n",
    "    print(f\"{library}: avg {stats['mean']:.3f}±{stats['std']:.3f}s ({stats['count']} tests)\")\n",
    "\n",
    "print(f\"\\n=== comparision via dataset ===\")\n",
    "for dataset in ['bike', 'california']:\n",
    "    print(f\"\\n{dataset.upper()} Dataset:\")\n",
    "    dataset_data = df_success[df_success['dataset'] == dataset]\n",
    "\n",
    "    dataset_performance = dataset_data.groupby('method')['runtime'].mean().sort_values()\n",
    "    for method, avg_time in dataset_performance.items():\n",
    "        print(f\"  {method}: {avg_time:.3f}s\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6. 创建可视化图表...\n",
      "可视化图表创建完成!\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1800x1200 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.style.use('default')\n",
    "sns.set_palette(\"husl\")\n",
    "plt.rcParams['figure.figsize'] = (15, 10)\n",
    "\n",
    "fig, axes = plt.subplots(2, 3, figsize=(18, 12))\n",
    "fig.suptitle('Laufzeitanalyse: shapiq vs shap - Vollständiger Vergleich', fontsize=16, fontweight='bold')\n",
    "\n",
    "# color choosing\n",
    "colors = {\n",
    "    'shap': '#E74C3C',      # 红色\n",
    "    'shapiq': '#3498DB'     # 蓝色\n",
    "}\n",
    "\n",
    "# 图1: entire time comparision\n",
    "ax1 = axes[0, 0]\n",
    "library_data = []\n",
    "library_labels = []\n",
    "for library in ['shap', 'shapiq']:\n",
    "    lib_data = df_success[df_success['library'] == library]['runtime']\n",
    "    library_data.append(lib_data)\n",
    "    library_labels.append(f'{library}\\n(n={len(lib_data)})')\n",
    "\n",
    "bp1 = ax1.boxplot(library_data, labels=library_labels, patch_artist=True)\n",
    "for patch, library in zip(bp1['boxes'], ['shap', 'shapiq']):\n",
    "    patch.set_facecolor(colors[library])\n",
    "    patch.set_alpha(0.7)\n",
    "\n",
    "ax1.set_ylabel('Laufzeit (Sekunden)')\n",
    "ax1.set_title('Gesamte Laufzeitverteilung nach Bibliothek')\n",
    "ax1.grid(True, alpha=0.3)\n",
    "\n",
    "# 图2: comparision via methods\n",
    "ax2 = axes[0, 1]\n",
    "method_means = df_success.groupby('method')['runtime'].mean().sort_values()\n",
    "colors_detailed = [colors[method.split('_')[0]] for method in method_means.index]\n",
    "\n",
    "bars2 = ax2.barh(range(len(method_means)), method_means.values, color=colors_detailed, alpha=0.7)\n",
    "ax2.set_yticks(range(len(method_means)))\n",
    "ax2.set_yticklabels([m.replace('_', '\\n') for m in method_means.index], fontsize=9)\n",
    "ax2.set_xlabel('Durchschnittliche Laufzeit (s)')\n",
    "ax2.set_title('Methodenvergleich nach Laufzeit')\n",
    "ax2.grid(True, alpha=0.3, axis='x')\n",
    "\n",
    "for i, bar in enumerate(bars2):\n",
    "    width = bar.get_width()\n",
    "    ax2.text(width + 0.005, bar.get_y() + bar.get_height()/2,\n",
    "             f'{width:.3f}s', ha='left', va='center', fontsize=8)\n",
    "\n",
    "# 图3: Budget vs Laufzeit (Bike Dataset)\n",
    "ax3 = axes[0, 2]\n",
    "bike_data = df_success[df_success['dataset'] == 'bike']\n",
    "for method in bike_data['method'].unique():\n",
    "    method_data = bike_data[bike_data['method'] == method]\n",
    "    budget_runtime = method_data.groupby('budget')['runtime'].mean()\n",
    "\n",
    "    color = colors[method.split('_')[0]]\n",
    "    linestyle = '-' if 'shap' in method else '--'\n",
    "    marker = 'o' if 'Kernel' in method else 's' if 'Permutation' in method else '^'\n",
    "\n",
    "    ax3.plot(budget_runtime.index, budget_runtime.values,\n",
    "             color=color, linestyle=linestyle, marker=marker,\n",
    "             label=method.replace('_', ' '), linewidth=2, markersize=6)\n",
    "\n",
    "ax3.set_xlabel('Budget')\n",
    "ax3.set_ylabel('Durchschnittliche Laufzeit (s)')\n",
    "ax3.set_title('Bike Sharing: Budget vs Laufzeit')\n",
    "ax3.legend(bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=8)\n",
    "ax3.grid(True, alpha=0.3)\n",
    "\n",
    "# 图4: Budget vs Laufzeit (California Dataset)\n",
    "ax4 = axes[1, 0]\n",
    "calif_data = df_success[df_success['dataset'] == 'california']\n",
    "for method in calif_data['method'].unique():\n",
    "    method_data = calif_data[calif_data['method'] == method]\n",
    "    budget_runtime = method_data.groupby('budget')['runtime'].mean()\n",
    "\n",
    "    color = colors[method.split('_')[0]]\n",
    "    linestyle = '-' if 'shap' in method else '--'\n",
    "    marker = 'o' if 'Kernel' in method else 's' if 'Permutation' in method else '^'\n",
    "\n",
    "    ax4.plot(budget_runtime.index, budget_runtime.values,\n",
    "             color=color, linestyle=linestyle, marker=marker,\n",
    "             label=method.replace('_', ' '), linewidth=2, markersize=6)\n",
    "\n",
    "ax4.set_xlabel('Budget')\n",
    "ax4.set_ylabel('Durchschnittliche Laufzeit (s)')\n",
    "ax4.set_title('California Housing: Budget vs Laufzeit')\n",
    "ax4.legend(bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=8)\n",
    "ax4.grid(True, alpha=0.3)\n",
    "\n",
    "# 图5: comparision via dataset\n",
    "ax5 = axes[1, 1]\n",
    "dataset_comparison = df_success.groupby(['dataset', 'library'])['runtime'].mean().unstack()\n",
    "dataset_comparison.plot(kind='bar', ax=ax5, color=[colors['shap'], colors['shapiq']], alpha=0.7)\n",
    "ax5.set_xlabel('Dataset')\n",
    "ax5.set_ylabel('Durchschnittliche Laufzeit (s)')\n",
    "ax5.set_title('Laufzeit nach Dataset und Bibliothek')\n",
    "ax5.legend(title='Bibliothek')\n",
    "ax5.tick_params(axis='x', rotation=0)\n",
    "ax5.grid(True, alpha=0.3, axis='y')\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
